{"version":3,"sources":["App.tsx","components/Tabs/Tabs.tsx","pages/TabsPage.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","to","Tabs","tabs","selectedTabId","useParams","tabId","map","tab","id","title","find","content","some","TabsPage","HomePage","ErrorPage","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kPAQMA,EAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACtB,OAAOC,IAAW,cAAe,CAC/B,YAAaD,GAEhB,EAEYE,EAAM,WACjB,OACE,qCAEE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,yBAKN,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,EC5BYE,G,KAAwB,SAAC,GAE/B,IAAD,EADJC,EACI,EADJA,KAIMC,EAFYC,cAAVC,MAIR,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKN,UAAU,gBAAf,SACE,6BACGG,EAAKI,KAAI,SAACC,GAAD,OACR,oBAEER,UAAWF,IAAW,CACpB,YAAaM,IAAkBI,EAAIC,KAErC,UAAQ,MALV,SAOE,cAAC,IAAD,CACER,GAAE,aAAQO,EAAIC,IACd,UAAQ,UAFV,SAIGD,EAAIE,SAVFF,EAAIC,GAFH,QAmBd,qBAAKT,UAAU,QAAQ,UAAQ,aAA/B,mBACGG,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,CAAf,WADhB,aACG,EAA4CQ,YAG5CR,IACCD,EAAKU,MAAK,SAAAL,GAAG,OAAIJ,IAAkBI,EAAIC,EAA1B,MAEf,qBAAKT,UAAU,QAAQ,UAAQ,aAA/B,mCAMP,GC/CKG,EAAO,CACX,CAAEM,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBAG7BE,EAAW,WACtB,OACE,qCACE,oBAAId,UAAU,QAAd,uBACA,cAAC,EAAD,CAAMG,KAAMA,MAGjB,EClBYY,EAAW,kBACtB,oBAAIf,UAAU,QAAd,sBADsB,ECAXgB,EAAY,kBACvB,oBAAIhB,UAAU,QAAd,2BADuB,ECQZiB,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUlB,GAAG,QACzC,cAAC,IAAD,CAAOiB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,cARrB,ECLpBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.7caff3c8.chunk.js","sourcesContent":["import {\n  NavLink, Outlet,\n} from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'is-active': isActive,\n  });\n};\n\nexport const App = () => {\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n            <NavLink to=\"/tabs\" className={getLinkClass}>Tabs</NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n}) => {\n  const { tabId } = useParams();\n\n  const selectedTabId = tabId;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': selectedTabId === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <Link\n                to={`../${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n\n      {(!selectedTabId\n      || !tabs.some(tab => selectedTabId === tab.id))\n      && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '../App.scss';\nimport { Tabs } from '../components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs tabs={tabs} />\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './pages/TabsPage';\nimport { HomePage } from './pages/HomePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<ErrorPage />} />\n        <Route path=\"tabs\">\n          <Route path=\":tabId?\" element={<TabsPage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}